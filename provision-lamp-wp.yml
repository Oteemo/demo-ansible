# Build a Wordpress install on a RHEL/CentOS staging server
# Components installed: httpd, php, php-mysql, wp-cli, mysql, mysqld

- hosts: tag_Application_webservers
  become: True
  become_user: root
  gather_facts: No

  vars:
    wordpress_url: https://wordpress.org/latest.tar.gz
    admin_user: greg
    website_name: Oteemo
    website_url: stage.oteemo.com
    website_user: oteemocom
    website_group: oteemo
    website_admin_login: oteemoadmin
    website_admin_password: "Us34B3tt3rP@$$w0rd!"
    website_admin_email: "arka@oteemo.com"
    website_password: "Us34B3tt3rP@$$w0rd!"
    dbname: oteemo
    dbpassword: "Us34B3tt3rP@$$w0rd!"

  tasks:
    - name: Update all packages
      yum: name=* state=latest

    - name: Install nano, wget and ntpd
      yum: name="{{item}}" state=present
      with_items:
        - nano
        - wget
        - ntp
        - epel-release

    - name: Enable wheel user group to run all commands
      lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel' line='%wheel ALL=(ALL) NOPASSWD: ALL'"

    - name: Add user {{admin_user}}
      user: name="{{admin_user}}" comment="Admin User" group=wheel
      
    #- name: Enable mariadb repo
      #copy: src=mariadb.repo dest=/etc/yum.repos.d/mariadb.repo owner=root group=root

    - name: Install httpd
      yum: name=httpd state=present

    - name: Install php and modules
      yum: name="{{item}}" state=present
      with_items:
        - php
        - php-mysql
        - php-mcrypt
        - php-gd

    - name: Install MariaDB
      yum: name="{{item}}" state=present
      with_items:
        #- MariaDB-server
        #- MariaDB-client
        #- MariaDB-devel
        - mysql-server
        - mysql
        - mysql-devel
        - MySQL-python
        - python-mysqldb

    - name: Start services
      service: name="{{item}}" state=started enabled=yes
      with_items:
        - httpd
        - mysql

#    - name: Open the correct IPTables ports
#      lineinfile: dest=/etc/sysconfig/iptables
#                  regexp="^-A INPUT -p {{item.protocol}} -m {{item.protocol}} --dport {{item.port}} -j ACCEPT$"
#                  line="-A INPUT -p {{item.protocol}} -m {{item.protocol}} --dport {{item.port}} -j ACCEPT"
#                  insertafter="^:OUTPUT ACCEPT \[\d*:\d*\]$"
#      with_items:
#        - { protocol: tcp, port: 80 }
#        - { protocol: tcp, port: 443 }
#        - { protocol: tcp, port: 22 }
#      notify:
#        - restart iptables
#
#  handlers:
#    - name: restart iptables
#      service: name=iptables state=restarted

    # - name: Set firewalld rules to let in tcp ports 80, 443 and 22
    #   firewalld:
    #     - port: "{{item}}/tcp"
    #       permanent: yes
    #       state: enabled
    #       immediate: yes
    #       with_items:
    #         - 80
    #         - 443
    #         - 22

    # - name: Restart service firewalld
    #   service: name=firewalld state=restarted

    - name: Create group {{website_group}}
      group: name="{{website_group}}" state=present
    
    - name: Create user {{website_user}}
      user: name={{website_user}} comment="Website User" password="{{website_password}}" groups={{website_group}},apache append=yes

    - name: Get latest Wordpress installer
      get_url: url={{wordpress_url}} dest=/var/www/html/latest.tar.gz mode=0644

    - name: Unarchive Wordpress # Requires Ansible 2.1+
      unarchive: src=/var/www/html/latest.tar.gz dest=/var/www/html owner="{{website_user}}" group="{{website_group}}" copy=no

    - name: Clean out anonymous users and privileges
      mysql_user: name='' host=localhost state=absent

    - name: Delete all anonymous db users
      mysql_user: name='' host_all=yes state=absent

    - name: Delete the test database
      mysql_db: name=test state=absent

    - name: Deletes the {{dbname}} database if it exists #For staging ONLY!
      mysql_db: name={{dbname}} state=absent

    - name: Create database and grant permissions
      mysql_db: name="{{dbname}}" state=present

    - name: Create mysql user {{website_user}}
      mysql_user: name={{website_user}} password={{dbpassword}} priv={{dbname}}.*:ALL state=present

    - name: Move Wordpress files to webroot
      shell: 'mv /var/www/html/wordpress/* /var/www/html/'

    - name: Delete *.gz in webroot
      file: path=/var/www/html/latest.tar.gz state=absent

    - name: Write wp-config.php to webroot
      template: src=files/wp-config.php.j2 dest=/var/www/wp-config.php owner=root group=root mode=0644

    - name: Download and install wp-cli
      get_url: url=https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar dest=/usr/local/bin/wp mode=0776 group=wheel

    - name: Install and configure the latest version of Wordpress with wp-cli
      command: chdir=/var/www/html wp core install --url={{website_url}} --title={{website_name}} --admin_user={{website_admin_login}} --admin_password='{{website_admin_password}}' --admin_email={{website_admin_email}}

    - name: Install and activate the Divi 2.0 theme
      command: chdir=/var/www/html wp theme install https://s3.amazonaws.com/arka-sandbox/Divi.zip --activate

