---
# Creates ec2 instance, then installs LAMP stack in it. Follows up with a current WordPress install complete with theme.

- hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    awsregion: us-east-1
    #instancesize: t2.micro
    instancesize: t2.small
    keypair: ec2-ol-mgt
    #amitouse: ami-6c1e8f04
    amitouse: ami-43745729 # CentOS 7.3
    numberofservers: 3
    subnettolaunchin: subnet-c7b3549c
    
  tasks:
      - name: Launch ec2 instance
        ec2:
          key_name: "{{ keypair }}"
          instance_type: "{{ instancesize }}"
          image: "{{ amitouse }}"
          wait: yes
          group: webserver-sg
          count: "{{ numberofservers }}"
          vpc_subnet_id: "{{ subnettolaunchin }}"
          assign_public_ip: yes
          region: "{{ awsregion }}"
          state: present
          instance_tags: "{'ansible_group':'jboss', 'type':'{{ instancesize }}', 'group':'webserver-sg','Name':'TM_demo'}"
        register: ec2

      - name: Wait until port 22 becomes active
        local_action: wait_for host={{ item.public_ip }} port=22 state=started
        with_items: "{{ ec2.instances }}"
       
      - name: Create an ELB 
        ec2_elb_lb:
        args:
          name: "ELB-TM-demo"
          state: present
          subnets: "{{ subnettolaunchin }}"
          region: "{{ awsregion }}"
          listeners:
            - protocol: http
              load_balancer_port: 80
              instance_port: 8080

    #      - name: ec2
    #        debug:
    #          var: ec2.instances

    #      - name: Register instances
    #        ec2_elb:
    #        args:
    #          region: "{{ awsregion }}"
    #          instance_id: '{{ item.id|join(",") }}'
    #          state: present
    #        with_items: "{{ ec2.instances }}"
             
      - name: Force refresh inventory
        meta: refresh_inventory
